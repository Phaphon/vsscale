import tkinter as tk
from tkinter import messagebox
from page_99_Utils import db_config, reset_db_connection

class SettingPage(tk.Frame):
    def __init__(self, master, go_back):
        super().__init__(master)

        # ===== ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö =====
        tk.Button(self, text="‚¨Ö ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", command=go_back).pack(anchor="nw", padx=5, pady=5)

        # ===== ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ =====
        tk.Label(self, text="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤", font=("Arial", 16, "bold")).pack(pady=10)

        # ===== ‡∏Å‡∏£‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° =====
        form_frame = tk.Frame(self)
        form_frame.pack(expand=True)

        # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß input
        def create_row(parent, label_text, entry_width=30):
            row = tk.Frame(parent)
            row.pack(fill="x", pady=6)

            lbl = tk.Label(row, text=label_text, width=15, anchor="w", font=("Arial", 12))
            lbl.pack(side="left", padx=5)

            entry = tk.Entry(row, width=entry_width, font=("Arial", 12))
            entry.pack(side="left", padx=5)
            return entry

        # ===== ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å =====
        self.sql_ip_entry      = create_row(form_frame, "Sql Server IP")
        self.sql_user_entry    = create_row(form_frame, "Sql user name")
        self.sql_pw_entry      = create_row(form_frame, "Sql pw")
        self.station_id_entry  = create_row(form_frame, "Station ID", entry_width=15)

        # === ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å db_config ===
        self.sql_ip_entry.insert(0, db_config.get("host", ""))
        self.sql_user_entry.insert(0, db_config.get("user", ""))
        self.sql_pw_entry.insert(0, db_config.get("password", ""))
        self.station_id_entry.insert(0, db_config.get("station", ""))

        # ===== ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å =====
        tk.Button(self, text="üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", font=("Arial", 12, "bold"),
                  command=self.save_settings).pack(pady=15)

    def save_settings(self):
        host = self.sql_ip_entry.get().strip()
        user = self.sql_user_entry.get().strip()
        pw   = self.sql_pw_entry.get().strip()
        station = self.station_id_entry.get().strip()

        new_config = {
            "host": host,
            "user": user,
            "password": pw,
            "database": "rpisql",
            "station": station
        }

        try:
            # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
            test_conn = mysql.connector.connect(
                host=host, user=user, password=pw, database="rpisql"
            )
            test_conn.close()

            # ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡πà‡∏≠‡∏¢‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
            db_config.update(new_config)
            reset_db_connection()
            save_config()  # ‚Üê ‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
            messagebox.showinfo("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", "‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        except Exception as e:
            messagebox.showerror("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", f"‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:\n{e}")
